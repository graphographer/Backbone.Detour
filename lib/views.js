// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.Views = (function() {

    function Views() {}

    Views.Base = (function(_super) {

      __extends(Base, _super);

      function Base() {
        return Base.__super__.constructor.apply(this, arguments);
      }

      Base.prototype.template = _.template('<h2><%= title %></h2>\n<p><%= message %></p>\n<div class="nav">\n  <% if(prev) { %>\n  <a class="prev" href="<%= prev %>">Prev</a>\n  <% } if(next) { %>\n  <a class="next" href="<%= next %>">Next</a>\n  <% } %>\n</div>');

      Base.prototype.render = function(prev) {
        console.log(prev);
        this.$el.html(this.template({
          title: this.title,
          message: this.message,
          next: this.next,
          prev: prev
        }));
        return this;
      };

      return Base;

    })(Backbone.View);

    Views.Intro = (function(_super) {

      __extends(Intro, _super);

      function Intro() {
        return Intro.__super__.constructor.apply(this, arguments);
      }

      Intro.prototype.title = "Introduction";

      Intro.prototype.message = "Backbone.detour lets you use your router as a parameter store.";

      Intro.prototype.next = '#section/usage';

      return Intro;

    })(Views.Base);

    Views.Usage = (function(_super) {

      __extends(Usage, _super);

      function Usage() {
        return Usage.__super__.constructor.apply(this, arguments);
      }

      Usage.prototype.title = "Usage";

      Usage.prototype.message = "First extend Backbone.Router.";

      return Usage;

    })(Views.Base);

    return Views;

  })();

}).call(this);
